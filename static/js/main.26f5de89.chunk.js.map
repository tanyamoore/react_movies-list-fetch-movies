{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getFilm","a","fetch","response","json","FindMovie","addNewMovie","useState","searchVal","getSearchVal","newMovie","setNewMovie","danger","setDanger","htmlFor","type","id","placeholder","cn","onChange","e","target","value","onClick","then","Response","Title","Plot","Poster","imdbID","App","data","setMovie","some","mov","ReactDOM","render","document","getElementById"],"mappings":"kxEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,uDCX3BG,EAAO,uCAAG,WAAMd,GAAN,eAAAe,EAAA,sEACEC,MAAM,6CAAD,OACmBhB,IAF1B,cACfiB,EADe,yBAKdA,EAASC,QALK,2CAAH,sDCQPC,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACVC,mBAAS,IADC,mBACrCC,EADqC,KAC1BC,EAD0B,OAEZF,mBAASZ,EAAO,IAFJ,mBAErCe,EAFqC,KAE3BC,EAF2B,OAGhBJ,oBAAS,GAHO,mBAGrCK,EAHqC,KAG7BC,EAH6B,KAsB5C,OACE,oCACE,0BAAMvB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQwB,QAAQ,eAAjC,eAIA,yBAAKxB,UAAU,WACb,2BACEyB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ3B,UAAW4B,IAAG,QAAS,CAAE,YAAaN,IACtCO,SAAU,SAACC,GACTX,EAAaW,EAAEC,OAAOC,WAK5B,uBACEhC,UAAW4B,IAAG,OAAQ,CAAE,YAAaN,KADvC,yCAOF,yBAAKtB,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEyB,KAAK,SACLzB,UAAU,kBACViC,QAAS,WAhDnBvB,EAgDsCQ,GA/CnCgB,MAAK,SAAC3B,GACLgB,GAAU,GACa,UAAnBhB,EAAM4B,WACRd,EAAY,CACVzB,MAAOW,EAAM6B,MACbvC,YAAaU,EAAM8B,KACnBvC,OAAQS,EAAM+B,OACdvC,QAAQ,8BAAD,OAAgCQ,EAAMgC,OAAtC,KACP9B,OAAQF,EAAMgC,SAEhBhB,GAAU,SAkCR,iBASF,yBAAKvB,UAAU,WACb,4BACEyB,KAAK,SACLzB,UAAU,oBACViC,QAAS,kBAAMjB,EAAYI,KAH7B,sBAWN,yBAAKpB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcoB,MC5EVoB,EAAM,WAAO,IAAD,EACIvB,mBAAS,YAAIwB,IADjB,mBAChBpC,EADgB,KACRqC,EADQ,KASvB,OACE,yBAAK1C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEgB,YAbY,SAACT,GACdF,EAAOsC,MAAK,SAAAC,GAAG,OAAIA,EAAInC,SAAWF,EAAME,WAC3CiC,EAAS,GAAD,mBAAKrC,GAAL,CAAaE,WCN3BsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.26f5de89.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","export const getFilm = async(title) => {\n  const response = await fetch(\n    `http://www.omdbapi.com/?apikey=6d421132&t=${title}`,\n  );\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport movies from '../../api/movies.json';\nimport { MovieCard } from '../MovieCard';\nimport { getFilm } from '../api';\n\nexport const FindMovie = ({ addNewMovie }) => {\n  const [searchVal, getSearchVal] = useState([]);\n  const [newMovie, setNewMovie] = useState(movies[0]);\n  const [danger, setDanger] = useState(false);\n\n  const findNewMovie = (title) => {\n    getFilm(title)\n      .then((movie) => {\n        setDanger(true);\n        if (movie.Response !== 'False') {\n          setNewMovie({\n            title: movie.Title,\n            description: movie.Plot,\n            imgUrl: movie.Poster,\n            imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n            imdbId: movie.imdbID,\n          });\n          setDanger(false);\n        }\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': danger })}\n              onChange={(e) => {\n                getSearchVal(e.target.value);\n              }}\n            />\n          </div>\n\n          <p\n            className={cn('help', { 'is-danger': danger })}\n          >\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findNewMovie(searchVal)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addNewMovie(newMovie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...newMovie} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addNewMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovie] = useState([...data]);\n\n  const addNewMovie = (movie) => {\n    if (!movies.some(mov => mov.imdbId === movie.imdbId)) {\n      setMovie([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addNewMovie={addNewMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}